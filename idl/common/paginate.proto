syntax = "proto3";

package paginate;

option go_package = "common/paginate";

message Options {
	int32 type = 1;
	string value = 2;
}

// 分页拉取机制
message ListOption {
	message Option {
		// @desc: 类型，各业务定义的type
		int32 type = 1;

		// @desc: 参数，只支持1个参数，参数实际类型和意义由type决定
		string value = 2;
	}

	// @desc: 搜索过滤逻辑，不支持逻辑或
	//   options内部是逻辑与关系，暂不支持逻辑或；尽量避免复杂的过滤逻辑，后台不好分页
	// @ignore: all
	repeated Option options = 1;

	// @desc: 需要获取的索引开始位置
	uint32 offset = 2;

	// @desc: 分页的每页字段长度
	uint32 limit = 3;

	bool need_count = 4;

	// @desc: 需要获取的索引开始位置标记
	string cursor = 5;
}

message Paginate {
	// @desc: 当前获取到的第一个的索引位置
	uint32 offset = 1;

	// @desc: 每页结果数
	uint32 limit = 2;

	// @desc: 总页数
	int64 total = 3;

	// @desc: 下次索引开始位置标记,为空标示没有下一个了
	string cursor = 5;
}

enum DefaultOrderBy {
	OrderByNil = 0;
	OrderByIdAsc = 1;
	OrderByIdDesc = 2;
}

enum DefaultListOption {
	ListOptionNil = 0;
	ListOptionIdList = 101;
	ListOptionOrderBy = 102;
}